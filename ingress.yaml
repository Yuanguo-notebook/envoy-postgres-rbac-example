static_resources:
  listeners:
  - name: postgres_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 1999
    filter_chains:
    - filters:
      - name: envoy.filters.network.rbac
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.rbac.v3.RBAC
          stat_prefix: postgres_rbac
          rules:
            action: LOG
            policies:
              "uri":
                permissions:
                # - metadata:
                #     filter: envoy.filters.network.postgres_proxy
                #     path:
                #     - key: test.postgres
                #     value:
                #       list_match:
                #         one_of:
                #           string_match:
                #             exact: select
                - any: true
                principals:
                  - authenticated:
                      principal_name:
                        exact: "proxy-postgres-frontend.example.com"
      - name: envoy.filters.network.postgres_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.postgres_proxy.v3alpha.PostgresProxy
          stat_prefix: ingress_postgres
          terminate_ssl: true
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: postgres_tcp
          cluster: postgres_cluster
          access_log:
          - name: envoy.access_loggers.stdout
            filter:
              metadata_filter:
                matcher: 
                  filter: envoy.common
                  path: 
                  - key: access_log_hint
                  value:
                    bool_match: false
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              log_format:
                json_format:
                  peer_subject: "%DOWNSTREAM_PEER_SUBJECT%"
                  downstream_dns: "%DOWNSTREAM_PEER_DNS_SAN%"
                  uri: "%DOWNSTREAM_PEER_URI_SAN%"
                  metadata: "%DYNAMIC_METADATA(envoy.filters.network.postgres_proxy)%"
      transport_socket:
        name: envoy.transport_sockets.starttls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig
          tls_socket_config:
            common_tls_context:
              tls_certificates:
              - certificate_chain:
                  filename: certs/servercert.pem
                private_key:
                  filename: certs/serverkey.pem
              validation_context:
                trusted_ca:
                  filename: certs/cacert.pem
  clusters:
  - name: postgres_cluster
    connect_timeout: 1s
    type: strict_dns
    load_assignment:
      cluster_name: postgres_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: postgres
                port_value: 5432

admin: 
  access_log_path: "/dev/null" 
  address: 
    socket_address: 
      address: 0.0.0.0 
      port_value: 8001
